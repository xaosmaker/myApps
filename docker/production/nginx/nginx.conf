# this used for replacing nginx file before conf.d
# user nginx;
# worker_processes auto;
# error_log /var/log/nginx/error.log warn;
#
# pid /var/run/nginx.pid;
#
# events {
#   worker_connections 1024;
# # }
#
# http {
#   include /etc/nginx/mime.types;
#   default_type application/octet-stream;
#   log_format main '$remote_addr - $remote_user [$time_local] "$request" '
#                   '$status $body_bytes_sent "$http_referer" '
#                   '"$http_user_agent" "$http_x_forwarded_for"';
#   access_log /var/log/nginx/access_log main;
#   sendfile on;
#   keepalive_timeout 65;

# ssl certificate
  # ssl_certificate /etc/letsencrypt/live/trainingwebdev.com/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/trainingwebdev.com/privkey.pem;
  #
  # ssl_protocols TLSv1.2 TLSv1.3;
  # ssl_prefer_server_ciphers on;
  # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $connection_upgrade;

  upstream api {
   server myapps_api:8000;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  #TODO: this for domain
  server {
    listen 80;
    server_name drosinakis.com www.drosinakis.com test.drosinakis.com;

    client_max_body_size  20M;

    error_log /var/log/nginx/error.log error;
    # return 301 https://$server_name$request_uri;

    location /api {
        proxy_pass http://api;
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log error;
    }
    location /admin {
        proxy_pass http://api;
        access_log /var/log/nginx/admin_access.log;
    }
    location /api/schema/swagger/ {
        proxy_pass http://api;
    }
    location /api/schema/ {
        proxy_pass http://api;
    }

    location /api/schema/redoc/ {
        proxy_pass http://api;
    }
    location / {
      root /app/dist/;
        index index.html;
        try_files $uri $uri/ /index.html;

    }
    location /static/ {
        alias /app/static/;
        expires 30d;

        add_header Cache-Control 'public, max-age=2592000';
    }
  }




  # this is fo ssl
  # server {
  #   listen 443 ssl http2;
  #   server_name trainingwebdev.com www.trainingwebdev.com;
  #
  #   client_max_body_size 20M;
  #   error_log /var/log/nginx/error.log error;
  #
  #   location /api {
  #       proxy_pass http://api;
  #       access_log /var/log/nginx/api_access.log;
  #       error_log /var/log/nginx/api_error.log error;
  #   }
  #
  #   location /admin {
  #       proxy_pass http://api;
  #       access_log /var/log/nginx/admin_access.log;
  #   }
  #   location /api/schema/swagger/ {
  #       proxy_pass http://api;
  #   }
  #   location /api/schema/ {
  #       proxy_pass http://api;
  #   }
  #
  #   location /api/schema/redoc/ {
  #       proxy_pass http://api;
  #   }
  #   location / {
  #       proxy_pass http://client;
  #
  #   }
  #   location /static/ {
  #       alias /app/static/;
  #       expires 30d;
  #
  #       add_header Cache-Control 'public, max-age=2592000';
  #   }
  #
  #
  #
  #
  #
  #
  # }

  # server {
  #   listen 443 ssl http2;
  #   server_name flower.trainingwebdev.com;
  #
  #   location / {
  #     proxy_pass http://flower;
  #   }
  # }

  # server {
  #   listen 443 ssl http2;
  #   server_name portainer.trainingwebdev.com;
  #
  #   location / {
  #     proxy_pass https://portainer;
  #   }
  # }

# }
